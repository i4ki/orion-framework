#labels Featured,Phase-Implementation
_Isto não tem relaçao com os padrões de Modelos de Objetos, como, Java Object Model ou Document Object Model, trata-se de uma nomenclatura do framework Orion._

= Introduction =

Quando se utiliza a técnica de desenvolvimento ORM (Mapeamento Objeto-Relacional), cada tabela do banco de dados é representada por uma classe (Model) e os campos da tabela são objetos. Assim, o banco de dados, juntamente com todo o projeto, possuem o [paradigma] orientado à objetos.
Assim os objetos do banco de dados possuem todas as caracteristicas dos objetos nativos da 
linguagem. 

ObjectModels para o Orion Framework são objetos abstratos, que podem ser extendidos por muitos outros objetos mais específicos e reduzindo muito a programação e manutenção dos Models.

= Details =

Imagine que precisamos criar um simples banco de dados para uma escola. Esse banco de dados será formado, entre outras, pelas tabelas "Student" e "Teacher". 

Veja a estrutura das tabelas Student e Teacher:
_O Orion utiliza o Doctrine ORM, esse ORM utiliza arquivos YAML para geração do schema do banco de dados_
{{{
# Models/Student.php
Student:
  columns:
    name:
      type: string(255)
      notnull: true
   nr_register:
      type: string(14)
      notnull: true
   course_id:
      type: integer
      notnull: true
    birth:
      type: date
      notnull: true
    address:
      type: string(255)
      notnull: true
    district:
      type: string(255)
    nr: 
      type: integer

# Models/Teacher.php
Teacher:
  columns:  
    name:
      type: string(255)
      notnull: true
    birth:
      type: date
      notnull: true
    address:
      type: string(255)
      notnull: true
    district:
      type: string(255)
      notnull: true
    nr:
      type: integer
    language_id:
      type: integer
}}}

Como estamos falando de objetos, podemos ver que o objeto "Student" e o objeto "Teacher" possuem muitas semelhanças